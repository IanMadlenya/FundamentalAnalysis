#!/usr/bin/env python2

import numpy as np
import matplotlib.pyplot as plt
import matplotlib.dates as mdates
import matplotlib.ticker as mticker
import pandas as pd

plt.suptitle('AAPL ticker')
plt.xlabel('Date')
num_rows_num_cols_tuple = (6,1)

dates_formatter = '%Y-%m-%d'
dateparse = lambda x: pd.datetime.strptime(x, dates_formatter)


def build_plot(cur_dict, shared_axis):
  eps_series = pd.read_csv(cur_dict['file_path'], parse_dates=[cur_dict['date_field_name']], date_parser=dateparse)
  ax = plt.subplot2grid(num_rows_num_cols_tuple, (cur_dict['row_position'], 0), rowspan=cur_dict['rowspan'])
  if (shared_axis):
    ax = plt.subplot2grid(num_rows_num_cols_tuple, (cur_dict['row_position'], 0), rowspan=cur_dict['rowspan'], sharex=shared_axis)
    print 'Shared axis!'
  ax.plot(eps_series[cur_dict['date_field_name']],eps_series[cur_dict['value_field_name']])
  ax.grid(True)
  ax.yaxis.set_major_locator(mticker.MaxNLocator(nbins='5', prune='upper'))
  plt.ylabel(cur_dict['y_label'])
  
  return ax

eps_dict = {
  'file_path'        : './data/calculated_ratios/eps_AAPL.csv', 
  'date_field_name'  : 'Date', 
  'value_field_name' : 'EPS', 
  'y_label'          : 'EPS', 
  'row_position'     : 0, 
  'rowspan'          : 1
}
peg_dict = {
  'file_path'        : './data/calculated_ratios/peg_AAPL.csv', 
  'date_field_name'  : 'Date', 
  'value_field_name' : 'PEG', 
  'y_label'          : 'PEG', 
  'row_position'     : 1, 
  'rowspan'          : 1
}
pe_median_dict = {
  'file_path'        : './data/calculated_ratios/pe_median_AAPL.csv', 
  'date_field_name'  : 'Date', 
  'value_field_name' : 'PE_median', 
  'y_label'          : 'P/E median', 
  'row_position'     : 2, 
  'rowspan'          : 1
}

outstanding_shares_dict = {
  'file_path'        : './data/fundamentals/outstanding_shares_RAYMOND_AAPL.csv', 
  'date_field_name'  : 'Date', 
  'value_field_name' : 'Value', 
  'y_label'          : 'Outstanding shares', 
  'row_position'     : 3, 
  'rowspan'          : 1
}
closing_price_dict = {
  'file_path'        : './data/stock_prices/close_prices_pre_2016_02_AAPL.csv', 
  'date_field_name'  : 'Date', 
  'value_field_name' : 'Close', 
  'y_label'          : 'Stock closing price', 
  'row_position'     : 4, 
  'rowspan'          : 2
}

ax_eps = build_plot(eps_dict, None)
ax_peg = build_plot(peg_dict, ax_eps)
ax_pe_median = build_plot(pe_median_dict, ax_eps)
ax_outstanding_shares = build_plot(outstanding_shares_dict, ax_eps)
ax_closing_price = build_plot(closing_price_dict, ax_eps)

plt.xticks(rotation=45)
plt.setp(ax_eps.get_xticklabels(), visible=False)
plt.setp(ax_pe_median.get_xticklabels(), visible=False)
plt.setp(ax_peg.get_xticklabels(), visible=False)
plt.setp(ax_outstanding_shares.get_xticklabels(), visible=False)
plt.subplots_adjust(left=.1,right=.96,top=.94,bottom=.16,hspace=0)


plt.show()

