#!/usr/bin/env python2

import pandas as pd
import numpy as np
import datetime as dt
from dateutil.relativedelta import relativedelta
from dateutil.parser import parse

import modules.config_details as conf_info
import modules.tickers_helpers as helpers

DATE_FIELD = 'Date'
DATE_FORMAT = '%Y-%m-%d'

def stock_prices_median(date, stock_prices_df, months_delta):
  # print 'date?', date
  end = parse(date)
  start = end + relativedelta(months=-months_delta)
  # print 'end', end
  # print 'start', start
  date_range = (stock_prices_df[DATE_FIELD] >= start.strftime(DATE_FORMAT)) & (stock_prices_df[DATE_FIELD] <= end.strftime(DATE_FORMAT))
  prices_time_delta = stock_prices_df[date_range]
  # print 'range size?', prices_time_delta['Adj Close'].count()
  median = prices_time_delta['Adj Close'].median()
  # print 'median?', median
  return median

def pe_calculations(stock_prices_dir, input_ratios_dir, tickers):
  for ticker in tickers:
    print 'Processing ticker:',ticker
    stock_price_filename_pre = conf_info.stock_prices_dir + conf_info.get_stock_prices_pre_2016_02_filename(ticker)
    stock_price_filename_post = conf_info.stock_prices_dir + conf_info.get_stock_prices_post_2016_02_filename(ticker)
    eps_filename = input_ratios_dir + conf_info.get_eps_filename(ticker)
    try:
      # load the EPS data
      eps_df = pd.read_csv(eps_filename)
      # print len(eps_df)

      # load the stock price data
      stock_price_pre_df = pd.read_csv(stock_price_filename_pre)
      stock_price_post_df = pd.read_csv(stock_price_filename_post)
      all_stock_prices_df = pd.concat([stock_price_pre_df,stock_price_post_df])

      PE_MEDIAN_FIELD = 'PE_median'
      pe_median_df = pd.DataFrame(columns=[DATE_FIELD,PE_MEDIAN_FIELD])
      delta_months_for_stocks_median = 3
      for date in eps_df[DATE_FIELD]:
        stocks_median = stock_prices_median(date, all_stock_prices_df, delta_months_for_stocks_median)
        current_eps = eps_df[eps_df[DATE_FIELD] == date]['EPS'].iloc[0]
        # print 'Current EPS', current_eps
        current_pe = stocks_median / current_eps
        # print 'P/E ratio:', current_pe
        pe_median_df.loc[len(pe_median_df)] = [date,current_pe]

      # store the P/E median (last 2 months) dataframe
      # print pe_median_df
      current_filename_with_path = input_ratios_dir + conf_info.get_pe_median_filename(ticker)
      pe_median_df.to_csv(current_filename_with_path, index=False)

    except Exception, e:
      print 'Failed to load something about ticker: ' + ticker + ' ~~~', str(e)


pe_calculations(conf_info.stock_prices_dir,conf_info.ratios_dir,helpers.get_all_tickers_lists_csv_files())
