#!/usr/bin/env python2

import pandas as pd
import numpy as np
import datetime as dt
from dateutil.relativedelta import relativedelta
from dateutil.parser import parse

tickers_clothes = [ 'NKE', 'UA', 'ADDYY', 'ADS', 'LULU' ]
tickers_air = [ 'EZJ', 'RYAAY' ] # Ryanair RYA:LN, RYAAY:US, RYAOF over the counter
tickers_social = [ 'NFLX', 'FB', 'TWTR', 'ETSY', 'LNKD' ]
tickers_factory = [ 'TSLA', 'IMG', 'IFX', 'SIE' ]
tickers_online_retail = [ 'AMZN', 'EBAY', 'EBA', 'BABA' ]
tickers_pay = [ 'PYPL', '2PP', 'SQ' ]
tickers_it = [ 'GOOG', 'GOOGL', 'AAPL', 'TEAM', 'GDDY' ]
tickers_health = [ 'FIT' ]

def merge_lists():
  all_tickers = list(set(tickers_clothes)|set(tickers_air)|set(tickers_social)|set(tickers_factory)|set(tickers_online_retail)|set(tickers_pay)|set(tickers_it)|set(tickers_health))
  return all_tickers

stock_prices_dir = 'data/stock_prices/'
ratios_dir = 'data/calculated_ratios/'

DATE_FIELD = 'Date'
DATE_FORMAT = '%Y-%m-%d'

def stock_prices_median(date, stock_prices_df):
  # print 'date?', date
  end = parse(date)
  start = end + relativedelta(months=-2)
  # print 'end', end
  # print 'start', start
  date_range = (stock_prices_df[DATE_FIELD] >= start.strftime(DATE_FORMAT)) & (stock_prices_df[DATE_FIELD] <= end.strftime(DATE_FORMAT))
  last_2_months = stock_prices_df[date_range]
  # print 'range size?', last_2_months['Close'].count()
  median = last_2_months['Close'].median()
  # print 'median?', median
  return median

def pe_calculations(stock_prices_dir, ratios_dir, tickers):
  for ticker in tickers:
    print 'Processing ticker:',ticker
    stock_price_filename_pre = stock_prices_dir + 'close_prices_pre_2016_02_' + ticker.upper() + '.csv'
    stock_price_filename_post = stock_prices_dir + 'close_prices_post_2016_02_' + ticker.upper() + '.csv'
    eps_filename = ratios_dir + 'eps_' + ticker.upper() + '.csv'
    try:
      # load the EPS data
      eps_df = pd.read_csv(eps_filename)
      # print len(eps_df)

      # load the stock price data
      stock_price_pre_df = pd.read_csv(stock_price_filename_pre)
      stock_price_post_df = pd.read_csv(stock_price_filename_post)
      all_stock_prices_df = pd.concat([stock_price_pre_df,stock_price_post_df])

      PE_MEDIAN_FIELD = 'PE_median'
      pe_median_df = pd.DataFrame(columns=[DATE_FIELD,PE_MEDIAN_FIELD])
      for date in eps_df[DATE_FIELD]:
        stocks_median = stock_prices_median(date, all_stock_prices_df)
        current_eps = eps_df[eps_df[DATE_FIELD] == date]['EPS'].iloc[0]
        # print 'Current EPS', current_eps
        current_pe = stocks_median / current_eps
        # print 'P/E ratio:', current_pe
        pe_median_df.loc[len(pe_median_df)] = [date,current_pe]

      # store the P/E median (last 2 months) dataframe
      # print pe_median_df
      current_filename_with_path = ratios_dir + 'pe_median_' + ticker.upper() + '.csv'
      pe_median_df.to_csv(current_filename_with_path, index=False)

    except Exception, e:
      print 'Failed to load something about ticker: ' + ticker + ' ~~~', str(e)


pe_calculations(stock_prices_dir,ratios_dir,merge_lists())
